METACHAR = { PIPE | AMPERSAND | L_PAREN | R_PAREN | L_ANGLE | R_ANGLE | SEMICOLON | WHITESPACE | NEWLINE | CMD_DELIM }
PIPE                = _{ "|" }
AMPERSAND           = { "&" }
L_PAREN             = { "(" }
R_PAREN             = { ")" }
L_ANGLE             = { "<" }
R_ANGLE             = { ">" }
SEMICOLON           = _{ ";" }
WHITESPACE          = _{ " " | "\t" }
NEWLINE             = _{ "\n" | "\r\n" }
CMD_DELIM           = _{ NEWLINE | SEMICOLON }

//ASSIGNMENT = @{ WORD ~ "=" ~ QUOTE}
WORD = @{ "-"? ~ "-"? ~ ASCII_ALPHANUMERIC+ ~ ("." ~ ASCII_ALPHANUMERIC+)? ~ ("/" ~ WORD*)?}
QUOTE = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

//control_operator     = _{}
    two_pipe           = { "||" }
    two_and            = { "&&" }
    and                = { "&" }
    semicolon          = { ";" }
    two_semi           = { ";;" }
    semi_and           = { ";&" }
    two_semi_and       = { ";;&" }
    pipe               = { "|" }
    pipe_and           = { "|&" }
    



program             = { command_list }
command_list        = { and_or ~ (CMD_DELIM+ ~ and_or)* }
and_or              = { pipeline ~ (LOGICAL_OP+ ~ pipeline)* }
pipeline            = { command ~ (PIPE ~ command)* }
command             = _{ if_clause | simple_command }
LOGICAL_OP = {"||" | "&&"}

if_clause = { 
                "if" ~ simple_command ~ CMD_DELIM ~ 
                "then" ~ simple_command ~ CMD_DELIM ~ 
                ("else" ~ simple_command ~ CMD_DELIM)? ~ 
                "fi" }
simple_command      = {  command_name ~ command_element* }
command_name = @{ !KEYWORD ~ ASCII_ALPHANUMERIC+ }
KEYWORD = _{ "if" | "then" | "else" | "fi" | "while" | "do" | "done" }

command_element = _{REDIRECTION | arg}
arg = { QUOTE | EQUATE | WORD }

EQUATE = _{ EQ | NEQ } 
EQ = { "=" }
NEQ = { "!=" }

REDIRECTION         = _{   APPEN_R | HEREDOC | TRUNC_R | INPUT }
    TRUNC_R       = { ">" ~ WORD }
    INPUT         = { "<" ~ WORD }
    APPEN_R       = { ">>" ~ WORD }
    HEREDOC       = { "<<" ~ WORD }

builtin_command     = { 
                       colon | dot | alias | 
                       bg | break_builtin | cd | 
                       command_builtin | continue_builtin | 
                       eval | exec | exit_builtin | 
                       export | fc | fg | getopts | 
                       hash_builtin | jobs | kill | 
                       pwd | read | readonly | 
                       return_builtin | set_builtin | 
                       shift | test_builtin | times | 
                       trap | type_builtin | ulimit | 
                       umask | unalias | unset | wait 
                     }
    colon              = { ":" }
    dot                = { "." }
    alias              = { "alias" }
    bg                 = { "bg" }
    break_builtin      = { "break" }
    cd                 = { "cd" }
    command_builtin    = { "command" }
    continue_builtin   = { "continue" }
    eval               = { "eval" }
    exec               = { "exec" }
    exit_builtin       = { "exit" }
    export             = { "export" }
    fc                 = { "fc" }
    fg                 = { "fg" }
    getopts            = { "getopts" }
    hash_builtin       = { "hash" }
    jobs               = { "jobs" }
    kill               = { "kill" }
    pwd                = { "pwd" }
    read               = { "read" }
    readonly           = { "readonly" }
    return_builtin     = { "return" }
    set_builtin        = { "set" }
    shift              = { "shift" }
    test_builtin       = { "test" | "[" } // test and [
    times              = { "times" }
    trap               = { "trap" }
    type_builtin       = { "type" }
    ulimit             = { "ulimit" }
    umask              = { "umask" }
    unalias            = { "unalias" }
    unset              = { "unset" }
    wait               = { "wait" }


