use phf::phf_map;
use std::path::PathBuf;

#[derive(Debug, PartialEq, Eq, Hash, Clone, Copy)]
pub enum Builtin {
    Colon, // :
    Dot,   // .
    Alias,
    Bind,
    Builtin,
    Caller,
    Command,
    Declare,
    Echo,
    Enable,
    Help,
    Let,
    Local,
    Logout,
    Mapfile,
    Printf,
    Readarray,
    Source,
    Shopt,
    True,
    False,
    Bg,
    Break,
    Cd,
    Continue,
    Eval,
    Exec,
    Exit,
    Export,
    Fc,
    Fg,
    Getopts,
    Hash,
    Jobs,
    Kill,
    Pwd,
    Read,
    Readonly,
    Return,
    Set,
    Shift,
    Test,
    Times,
    Trap,
    Type,
    Ulimit,
    Umask,
    Unalias,
    Unset,
    Wait,
}

pub static BUILTINS: phf::Map<&'static str, Builtin> = phf_map! {
    "alias" => Builtin::Alias,
    "cd" => Builtin::Cd,
    "command" => Builtin::Command,
    "continue" => Builtin::Continue,
    "eval" => Builtin::Eval,
    "echo" => Builtin::Echo,
    "exit" => Builtin::Exit,
    "export" => Builtin::Export,
    "pwd" => Builtin::Pwd,
    "bg" => Builtin::Bg,
    "break" => Builtin::Break,
    "exec" => Builtin::Exec,
    "true" => Builtin::True,
    "false" => Builtin::False,
    "fc" => Builtin::Fc,
    "fg" => Builtin::Fg,
    "getopts" => Builtin::Getopts,
    "hash" => Builtin::Hash,
    "jobs" => Builtin::Jobs,
    "kill" => Builtin::Kill,
    "read" => Builtin::Read,
    "readonly" => Builtin::Readonly,
    "return" => Builtin::Return,
    "set" => Builtin::Set,
    "shift" => Builtin::Shift,
    "test" => Builtin::Test,
    "[" => Builtin::Test,
    "times" => Builtin::Times,
    "trap" => Builtin::Trap,
    "type" => Builtin::Type,
    "ulimit" => Builtin::Ulimit,
    "umask" => Builtin::Umask,
    "Unalias" => Builtin::Unalias,
    "unset" => Builtin::Unset,
    "wait" => Builtin::Wait,
};

#[derive(Debug, PartialEq, Eq, Hash, Clone)]
pub enum CmdName {
    Builtin(Builtin),
    Path(PathBuf),
    Alias(String),
    Function(String),
    Unknown(String),
}
